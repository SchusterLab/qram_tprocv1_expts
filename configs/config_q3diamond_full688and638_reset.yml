device:

    readout:
        trig_offset: 145 # [Clock ticks]
        lo_sideband: [1, 1, 1, 1] # whether taking the +/- sideband after LO [we no longer have a readout LO]

        # HIGH POWER
        # frequency: [-392.35, 5794.5, 500, -230.5]
        # gain: [0.5, 0.12, 0.5, 0.2]
        # readout_length: [5, 5, 5, 5]

        # frequency: [-391.0252717544333, 5794.5, 500, -229.94910723]
        # gain: [0.04, 0.12, 0.5, 0.035]
        # readout_length: [15, 5, 5, 15]

        # LOW POWER
        frequency: [-391.0252717544333, 5794.961666663333, 501.288233333334, -229.94910723]
        gain: [0.04, 0.03, 0.18, 0.035]
        readout_length: [15.0, 10.0, 5.0, 15.0]

        # frequency_ef: [-392.9315036040767, 5794.925333329999, 499.41074988962544, -231.37577390000007]
        # readout_length_ef: [8.0, 7.0, 4.0, 4.0] # [us]

        relax_delay: [450, 450, 450, 450] # [us]
        # readout_cool_trig_stack: [2, 2, 2, 2]
    qubit:
        # f_ge: [4110.4080251717705, 4105.048189664584, 4110.198576889643, 4109.870151106654, 3442.8095108490056, 3448.190366688296, 3447.0857887636976, 3446.8874200312653, 4762.060705219546, 4761.102749662887, 4762.201572322125, 4761.678033261405, 4381.14185795623, 4380.370331938204, 4381.142621732222, 4381.679544300405] # these are the ramsey freqs
        f_ge: [4111.128316516939, 4105.867592682015, 4110.994688934281, 4110.579369837695, 3443.482349236793, 3448.8244761496476, 3447.706823169816, 3447.5052085761054, 4762.743580751455, 4761.745710010409, 4762.873962226965, 4762.370786469688, 4380.292461267258, 4379.535103914169, 4380.328267473819, 4380.978717756275]
        f_ef: [3885.0150973325517, 0.0, 0.0, 0.0, 0.0, 3348.490547076936, 0.0, 0.0, 4571.9056482340775, 4570.996526541673, 4572.845483074933, 0.0, 4209.877269497305, 4205.53388737822, 0.0, 4208.25432515729]
        f_EgGf: [2686.53594683, 0, 2017.3, 2414.92850999] # [MHz] expect to be ge_1 + ef_1 - ge_0; drive on Q1 to perform a swap with Qx

        f_EgGf_Q: [0, 0, 5883.653411964549, 5146.7827380952385]
        # drive on Qx to perform a swap with Q1. For Q2: set Q0 in g before starting. For Q3: set Q0 in e before starting

        # f_f0g1: [1185.65, 998.45, 1642.2333333333333, 1613.44860993] # [MHz] expect to be ge_1 + ef_1 - ge_0; drive on QX to perform a swap with resX
        f_f0g1: [1184.4, 999.8, 1632.9833333333333, 1620.9166666666665] # [MHz] expect to be ge_1 + ef_1 - ge_0; drive on QX to perform a swap with resX
        gs: [52.40296404695958, 54.81794456602636, 43.49513117058557, 4.930653352423196, 2.6415018214608046, 6.386231497692186] # [MHz] g01, g12, g13, g02, g03, g23 from theoretical comparison for ZZ shift


        pulses:
            pi_ge:
                sigma: [0.02, 0.02, 0.02, 0.02, 0.025, 0.025, 0.025, 0.025, 0.015, 0.015, 0.015, 0.015, 0.025, 0.025, 0.025, 0.025] # [us]
                gain: [1859, 1914, 0, 1855, 2834, 2628, 2648, 2631, 14489, 14572, 14389, 14639, 963, 959, 974, 963]
                half_gain: [1864, 1867, 1871, 1873, 2511, 2319, 2341, 2320, 14796, 14866, 14631, 14805, 856, 852, 858, 856] # calibrate by using half of the sigma in us, then recalibrate the gain
                # half_gain: [1866, 1870, 1872, 1873, 2497, 2311, 0, 0, 14468, 0, 14615, 14464, 852, 0, 855, 856] # ramsey
                half_correction_phase: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                half_gain_pi_sigma: [927, 0, 0, 0, 0, 1315, 0, 0, 0, 0, 7212, 0, 0, 0, 0, 460] # calibrate using same sigma, recalibrate the gain
                # sigma: [0.02, 0.02, 0.02, 0.02, 0.025, 0.036, 0.025, 0.025, 0.015, 0.015, 0.015, 0.015, 0.025, 0.025, 0.025, 0.025] # [us]
                # gain: [1859, 1914, 0, 1855, 2834, 2628, 2648, 2631, 14489, 14572, 14389, 14639, 963, 959, 974, 963]
                # half_gain: [1858, 1858, 0, 0, 0, 1828, 0, 0, 0, 0, 14615, 0, 855, 0, 859, 856] # calibrate by using half of the sigma in us, then recalibrate the gain
                # half_gain_pi_sigma: [927, 0, 0, 0, 0, 1315, 0, 0, 0, 0, 7212, 0, 0, 0, 0, 460] # calibrate using same sigma, recalibrate the gain
                type: 'gauss'
            pi_ef:
                sigma: [0.02, 0.02, 0.02, 0.02, 0.025, 0.025, 0.025, 0.025, 0.015, 0.015, 0.015, 0.015, 0.03, 0.03, 0.03, 0.03] # [us]
                gain: [1346, 0, 0, 0, 0, 1951, 0, 0, 10000, 10079, 10041, 0, 734, 718, 0, 717]
                half_gain: [1261, 0, 0, 0, 0, 1941, 0, 0, 0, 10147, 10121, 9979, 0, 0, 0, 539] # calibrate by using half of the sigma in us, then recalibrate the gain
                half_gain_pi_sigma: [673, 0, 0, 0, 0, 975, 0, 0, 0, 0, 5049, 0, 350, 0, 0, 337] # calibrate by using half of the sigma in us, then recalibrate the gain
                type: 'gauss'
            pi_EgGf: # drive on Q1 to perform a swap with Qx
                gain: [32000, 0, 30000, 16000]
                sigma: [0.586, 0, 0.8, 0.44643] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse
                type: 'flat_top'
            pi_EgGf_Q: # drive on Qx to perform a swap with Q1. For Q2: set Q0 in g before starting. For Q3: set Q0 in e before starting
                gain: [0, 0, 19655, 15607]
                sigma: [0, 0, 0.4361071627609746, 0.3047974366625188] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse

                # gain: [0, 0, 30000, 15607]
                # sigma: [0, 0, 0.3261001701564052, 0.3047974366625188] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse

                phase: [0, 0, 18.0, 24.0] # in degrees, this should be the 2x the phase that shows up in the tomo
                half_sigma: [0, 0, 0.212, 0.172]
                half_phase: [0, 0, 18.0, 21.0]
                type: 'flat_top'
            pi_f0g1: # drive on Qx to do an f0-g1 with Qx resonator
                gain: [32000, 32000, 32000, 32000]
                sigma: [0.536, 0.585, 1.540, 1.040] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse
                idle: [3, 6, 12, 8]
                type: 'flat_top'

            pulse_pp:
                gain: [1750, 3550, 0, 0]
                filename: '240920_3_qram_4q_2qubit_++gg'
            pulse_1p:
                gain: [3500, 4375, 0, 0]
                filename: '240920_qram_4q_2qubit_e+gg'
            pulse_p1:
                gain: [3000, 5530, 0, 0]
                filename: '240920_qram_4q_2qubit_+egg'
            
            pihalf_ge_robust:
                gain_q0: [0, 0, 0, 0]
                gain_q1: [0, 0, 0, 0]
                gain_q2: [0, 0, 0, 0]
                gain_q3: [0, 0, 0, 0]
                filename: ['', '', '', '']

            # pi_ge_crosstalk: # pulse to apply on Qx to cancel drive crosstalk during simultaneous pi_EgGf_Q pulses on Q2, Q3
            #     delta: [0, 50, 0, 0] # f_crosstalk - f_ge
            #     gain: [0, 100, 0, 0] 
            #     phase: [0, 0, 0, 0]
            #     type: 'flat_top'
            # pi_ge_adiabatic:
            #     gain: [-1, 25000, -1, -1]
            #     mu: [0, 6, 0, 0]
            #     beta: [0, 4, 0, 0]
            #     period: [0, 0.480, 0, 0]
            # pi_ge_IQ:
            #     gain: 1373
            pi_ge_slow:
                gain: [-1, 100, -1, -1]
                sigma: [-1, 0.250, -1, -1] # [us]
                # half_gain: [None, None, None, None] # calibrate by using half of the sigma in us, then recalibrate the gain
                type: 'gauss'
            pi_Q1_ZZ_slow: # SLOW pi pulse length for Q1 when other qubits are in e
                gain: [100, 0, -1, -1]
                sigma: [0.250, 0, -1, -1] # [us]
                type: 'gauss'

hw:
    soc:
        dacs:
        # dac types: full (full gen - all gens in standard firmware) or int4, mux4 (q3diamond)
        # For mux4, all 4 readouts are on the same DAC (ch 6). Need to make sure none of the
        # 4 muxed readout freqs are not in the same bin, which are fs/16 wide
            qubit:
                ch: [0, 1, 2, 3]
                type: 'full'
                nyquist: [2, 1, 2, 2]
                mixer_freq: [0, 0, 0, 0]
            swap:
                ch: 1
                type: 'full'
                nyquist: 1
                mixer_freq: 0
            swap_f0g1:
                ch: [1, 1, 5, 5]
                type: ['full', 'full', 'full', 'full']
                nyquist: 1
                mixer_freq: 0
            swap_Q:
                ch: [0, -1, 2, 3]
                type: ['full', None, 'full', 'full']
                nyquist: [2, 0, 2, 2]
                mixer_freq: 0
            readout:
                ch: [6, 4, 6, 6]
                type: ['mux4', 'full', 'mux4', 'mux4']
                mixer_freq: [7200, 0, 7200, 7200] # [MHz] freq to mix up
                nyquist: [2, 2, 2, 2]
            res_pump:
                ch: 4
                type: 'full'
                mixer_freq: 0 # [MHz] freq to mix up
                nyquist: 2
            delay_chs:
                ch: [0, 1, 2, 3, 4, 5, 6]
                # delay_ns: [8.7, 8.5, 0, 7.6, 24, 20, 74.5]
                delay_ns: [8.7, 8.5, 0, 7.6, 24, 20, 104.5]
        adcs:
            readout:
                ch: [0, 1, 2, 3]
    lo:
        twpa:
            # # OPT FOR ALL
            # frequency: 8180.0e6
            # power: -1.8846153846153846 # min -40, max +15 dBm

            # OPT FOR Q2, Q3
            frequency: 8170.0e6
            power: -1.0 # min -40, max +15 dBm

            # # OPT FOR Q1
            # frequency: 8270.0e6
            # power: -2.1923076923076925 # min -40, max +15 dBm

        readout:
            frequency: 0
            power: 0 # mixer wants 7 dBm

aliases: # for use in instrument manager
    readout_LO: SC_20A1
    twpa_LO: SC_26C1
    soc: Qick_QRAM # 10.108.30.52
    # soc: Qick60 # 10.108.30.60 BF1
    # soc: Qick233 # SLAC BF5 QRAM