device:
    qubit:
        T1: [30, 96, 9, 58] # [us]
        f_ge: [146.29086881774893, 3464.7328172002403, 806.4284729347243, 426.85588770023173] # [MHz]
        f_Q1_ZZ: [3459.6786038062905, 0, 3463.6713203864697, 3463.502866097378] # [MHz] frequency of Q1 when other qubits are in e
        f_ef: [-78.90376315971923, 3364.253, 611.098326885819, 254.36098271568733] # [MHz]
        f_EgGf: [2678.75, 0, 2016.30, 2395.2] # [MHz] expect to be ge_1 + ef_1 - ge_0
        # gs: [54, 0, 43, 40] # [MHz] from theoretical comparison for ZZ shift
        ZZs: [0.0, -4.7126775455997745, -0.10534620937775685, -0.28344964409794215, -4.236078028296106, 0.0, -0.16869289545775246, -0.2784781391173965, 0.5146242128746508, -0.12676679271078228, 0.0, -0.06125637291711428, 3.0556426555347116, 2.6356995614617063, 3.312733462014023, 0.0] # make sure to reshape to 4x4: (QA freq when QB is in e) - (QA freq when QB is in g). rows = qA, cols = qB

        pulses:
            pi_ge:
                gain: [25000, 20197, 27992, 24647]
                sigma: [0.040, 0.020, 0.040, 0.025] # [us]
                type: [gauss, gauss, gauss, gauss]
            pi_ef:
                gain: [31065, 13553, 16026, 21903]
                sigma: [0.025, 0.025, 0.025, 0.0166] # [us]
                type: gauss
            pi_Q1_ZZ: # pi pulse length for Q1 when other qubits are in e
                gain: [21755, 0, 22230, 22495]
                # sigma: [0.0348, 0, 0.0160, 0.0175] # [us]
                # sigma: [0.0220, 0, 0.0160, 0.0175] # [us]
                sigma: [0.017798133875785653, 0, 0.01792220834421204, 0.018190088470661423] # [us]
                type: [gauss, gauss, gauss, gauss]
            pi_EgGf:
                gain: [2679, 0, 4250, 2850]
                sigma: [0.227, 0, 0.280, 0.293] # [us]
                type: const

    
    readout:
        trig_offset: 125 # [Clock ticks]
        # frequency: [810.409984606071, -804.7555447534925, -82.3, 79.3372763161615] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 7.681/7.686, 5.775/5.781, 6.787/6.793, 6.949/6.955)
        frequency: [-73.825, -812.617, 818.898, 87.436] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        # frequency: [-73.825, -812.257, 818.898, 87.436] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        lo_sideband: [1, -1, 1, 1] # whether taking the +/- sideband after LO
        gain: [0.48, 0.86, 0.91, 0.75] # [MUX units: range -1 to 1, signed amplitude]
        readout_length: [10, 10, 5, 10] # [us]
        relax_delay: [88, 287, 28, 173] # [us]
    
hw:
    soc:
        dacs:
        # dac types: full (full gen - all gens in standard firmware) or int4, mux4 (q3diamond)
        # For mux4, all 4 readouts are on the same DAC (ch 6). Need to make sure none of the
        # 4 muxed readout freqs are not in the same bin, which are fs/16 wide
            qubit:
                ch: [0, 5, 0, 0]
                # ch: [0, 4, 0, 0]
                type: ['int4', 'full', 'int4', 'int4']
                mixer_freq: [4000, 0, 4000, 4000]
                nyquist: [2, 2, 2, 2]
            swap:
                ch: [4, -1, 4, 4]
                type: ['full', None, 'full', 'full']
                # nyquist: [2, 0, 2, 2]
                nyquist: [1, 0, 1, 1]
            readout:
                # ch: 1
                # type: 'full'
                # nyquist: 1
                # ch: 0
                # type: 'int4'
                # mixer_freq: 2000 # [MHz] freq to mix up
                # nyquist: 1
                ch: 6
                type: 'mux4'
                mixer_freq: 950 # [MHz] freq to mix up
                nyquist: 1
        adcs:
            readout:
                ch: [0, 1, 2, 3]
    lo:
        readout:
            frequency: 5925e6
            power: 7 # mixer wants 7 dBm
            
aliases: # for use in instrument manager
    readout_LO: SC_26C1
    soc: Qick187