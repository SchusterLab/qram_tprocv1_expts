device:
    qubit:
        T1: [45, 127, 55, 50] # [us]
        f_ge: [4128.575129385544, 3457.2422590133906, 4782.305489871236, 4396.915066710553] # [MHz]
        f_Q1_ZZ: [3452.0169427371175, 3457.338723559245, 3456.1893267454375, 3456.018803727748] # [MHz] frequency of Q1 when other qubits are in e
        f_Q_ZZ1: [4123.341754941294, 3457.338723559245, 0, 0] # [MHz] frequency of Qx when Q1 is in e
        f_ef: [3902.5097729724093, 3356.7928599815136, 4592.465676139941, 4223.758894341571] # [MHz]
        # f_EgGf: [2682.783, 0, 2024.5, 2407.3] # [MHz] expect to be ge_1 + ef_1 - ge_0
        f_EgGf: [2681.44696031, -1, 2028.5, 2407.9] # [MHz] expect to be ge_1 + ef_1 - ge_0
        f_EgGf_Q: [-1, -1, 5916.5, 5166.4] # [MHz]
        gs: [54.34474556, 56.18845266, 43.07411448, 5.80677427, 2.37708297, 6.56997134] # [MHz] g01, g12, g13, g02, g03, g23 from theoretical comparison for ZZ shift
        ZZs: [0.0, -5.321780822127494, -0.15523394324009132, -0.5691491834904809, -5.321780822127494, 0.0, -1.1493968138074706, -1.319919831496918, -0.15523394324009132, -1.1493968138074706, 0.0, -1.2349280184125746, -0.6247231879115134, -1.319919831496918, -1.2349280184125746, 0.0] # make sure to reshape to 4x4: (QA freq when QB is in e) - (QA freq when QB is in g). rows = qA, cols = qB

        pulses:
            pi_ge:
                gain: [29539, 824, 2328, 2534]
                sigma: [0.015, 0.015, 0.015, 0.015] # [us]
                type: 'gauss'
            # pi_ge_adiabatic:
            #     gain: [-1, 25000, -1, -1]
            #     mu: [0, 6, 0, 0]
            #     beta: [0, 4, 0, 0]
            #     period: [0, 0.480, 0, 0]
            pi_ge_IQ:
                gain: 1373
            pi_ef:
                gain: [25302, 473, 1633, 1770]
                sigma: [0.015, 0.015, 0.015, 0.015] # [us]
                type: 'gauss'
            pi_Q1_ZZ: # pi pulse length for Q1 when other qubits are in e
                gain:  [1002, 0, 884, 886]
                sigma: [0.015, 0, 0.015, 0.015] # [us]
                type: 'gauss'
            pi_Q_ZZ1: # pi pulse length for Qx when Q1 in e
                gain:  [25800, 824, 2328, 2534]
                sigma: [0.015, 0, 0.015, 0.015] # [us]
                type: 'gauss'
            pi_EgGf: # drive on Q1 to perform a swap with Qx
                gain: [32000, 0, 11000, 32000]
                sigma: [0.586, 0, 0.450, 0.44643] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse
                type: 'flat_top'
            pi_EgGf_Q: # drive on Qx to perform a swap with Q1. For Q2: set Q0 in e before starting. For Q3: set Q0 in g before starting
                gain: [0, 0, 18000, 17000]
                sigma: [0, 0, 0.612, 0.285] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse
                type: 'flat_top'

    readout:
        trig_offset: 125 # [Clock ticks]
        lo_sideband: [1, -1, 1, 1] # whether taking the +/- sideband after LO
        frequency: [-71.06906867350231, -815.202041072, 821.4880333333334, 90.15933333333334] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        # frequency: [-72.926, -813.528, 819.6947 , 88.346] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        gain: [0.35, 0.35, 0.95, 0.4] # [MUX units: range -1 to 1, signed amplitude]
        # gain: [0.25, 0.25, 0.95, 0.25] # [MUX units: range -1 to 1, signed amplitude]
        readout_length: [8, 8, 8, 8] # [us]
        relax_delay: [220, 500, 220, 200] # [us]

hw:
    soc:
        dacs:
        # dac types: full (full gen - all gens in standard firmware) or int4, mux4 (q3diamond)
        # For mux4, all 4 readouts are on the same DAC (ch 6). Need to make sure none of the
        # 4 muxed readout freqs are not in the same bin, which are fs/16 wide
            qubit:
                ch: [0, 1, 2, 3]
                type: 'full'
                nyquist: [2, 1, 2, 2]
                mixer_freq: [0, 0, 0, 0]
            swap:
                ch: [1, -1, 1, 1]
                type: ['full', None, 'full', 'full']
                nyquist: [1, 0, 1, 1]
                mixer_freq: 0
            swap_Q:
                ch: [0, -1, 2, 3]
                type: ['full', None, 'full', 'full']
                nyquist: [2, 0, 2, 2]
                mixer_freq: 0
            readout:
                ch: 6
                type: 'mux4'
                mixer_freq: 950 # [MHz] freq to mix up
                nyquist: 1
        adcs:
            readout:
                ch: [0, 1, 2, 3]
    lo:
        readout:
            frequency: 5925e6
            power: 7 # mixer wants 7 dBm

aliases: # for use in instrument manager
    # readout_LO: SC_26C1
    # soc: Qick187
    soc: Qick233