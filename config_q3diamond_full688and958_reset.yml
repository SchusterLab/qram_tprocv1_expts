device:
    qubit:
        T1: [30, 110, 105, 150] # [us]
        f_ge: [4140.530270731964, 3463.742568636059, 4800.079246546452, 4415.18623279066] # [MHz]
        f_Q1_ZZ: [3458.6082793015007, 0, 3462.660233985849, 3462.4180842997853] # [MHz] frequency of Q1 when other qubits are in e
        f_ef: [3914.7570214638718, 3363.398427976613, 4610.7977211230145, 4243.1626645869358] # [MHz]
        f_EgGf: [2682.783, 0, 2024.5, 2407.3] # [MHz] expect to be ge_1 + ef_1 - ge_0
        # f_EgGf: [2686.2, 0, 2026.1, 2411.05] # [MHz] expect to be ge_1 + ef_1 - ge_0
        gs: [54.38663964, 52.60236201, 41.1249601,   6.26475719,  2.73059709,  6.00700312] # [MHz] g01, g12, g13, g02, g03, g23 from theoretical comparison for ZZ shift
        ZZs: [0.0, -5.114594559749094, -0.18282363920479838, -0.498164234703836, -5.102823962105504, 0.0, -0.9444087654687792, -1.0606959776605436, -0.18631446427480114, -0.953190326496042, 0.0, -0.4841473294491152, -0.5065394094099247, -1.0909347449496636, -0.40800300690079894, 0.0] # make sure to reshape to 4x4: (QA freq when QB is in e) - (QA freq when QB is in g). rows = qA, cols = qB

        pulses:
            pi_ge:
                gain: [22882, 19375, 8131, 5854]
                sigma: [0.03157, 0.045, 0.070, 0.07043] # [us]
                type: 'gauss'
            pi_ef:
                gain: [13782, 21716, 23173, 22120]
                sigma: [0.02117, 0.015, 0.015, 0.015] # [us]
                type: 'gauss'
            pi_Q1_ZZ: # pi pulse length for Q1 when other qubits are in e
                gain:  [19733, 0, 20819, 20392]
                sigma: [0.05120, 0, 0.04364, 0.04395] # [us]
                type: 'gauss'
            pi_EgGf:
                gain: [12300, 0, 15000, 11300]
                sigma: [0.231, 0, 0.450, 0.371] # [us], assume 3 clock cycle * 4 sigma ramp, this is the "total length" for a flat top pulse
                type: 'flat_top'

    readout:
        trig_offset: 125 # [Clock ticks]
        lo_sideband: [1, -1, 1, 1] # whether taking the +/- sideband after LO
        frequency: [-72.926, -813.508, 819.6947 , 88.346] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        # frequency: [-72.926, -813.528, 819.6947 , 88.346] # [MHz] max: 860 MHz, must be in separate bins = fs/16 (hi/lo power: 6.787/6.793, 5.775/5.781, 7.681/7.686, 6.949/6.955)
        gain: [0.25, 0.95, 0.95, 0.50] # [MUX units: range -1 to 1, signed amplitude]
        # gain: [0.25, 0.25, 0.95, 0.25] # [MUX units: range -1 to 1, signed amplitude]
        readout_length: [8, 8, 8, 8] # [us]
        relax_delay: [200, 400, 400, 600] # [us]
        # relax_delay: [76, 287, 111, 318] # [us]

hw:
    soc:
        dacs:
        # dac types: full (full gen - all gens in standard firmware) or int4, mux4 (q3diamond)
        # For mux4, all 4 readouts are on the same DAC (ch 6). Need to make sure none of the
        # 4 muxed readout freqs are not in the same bin, which are fs/16 wide
            qubit:
                # ch: [0, 2, 0, 0]
                ch: [0, 1, 0, 0]
                type: 'full'
                nyquist: [2, 2, 2, 2]
                mixer_freq: [0, 0, 0, 0]
            swap:
                ch: [1, -1, 1, 1]
                type: ['full', None, 'full', 'full']
                nyquist: [2, 0, 2, 2]
                # nyquist: [1, 1, 1, 1]
            readout:
                ch: 6
                type: 'mux4'
                mixer_freq: 950 # [MHz] freq to mix up
                nyquist: 1
        adcs:
            readout:
                ch: [0, 1, 2, 3]
    lo:
        readout:
            frequency: 5925e6
            power: 7 # mixer wants 7 dBm

aliases: # for use in instrument manager
    readout_LO: SC_26C1
    soc: Qick187